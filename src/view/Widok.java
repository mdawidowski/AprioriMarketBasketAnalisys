/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * widoki
 * @author marcin
 */
public class Widok extends javax.swing.JFrame {

/**
 * Creates new form Widok
 * @throws java.sql.SQLException
 */
public Widok() throws SQLException {
        initComponents();
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroup = new javax.swing.ButtonGroup();
        CloseButton = new javax.swing.JButton();
        CalculateButton = new javax.swing.JButton();
        ProduktComboBox = new javax.swing.JComboBox<>();
        ProduktLabel = new javax.swing.JLabel();
        PrzygotujButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CloseButton.setText("Zamknij");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        CalculateButton.setText("Oblicz");
        CalculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateButtonActionPerformed(evt);
            }
        });

        try{
            ProduktComboBox.setModel(new DefaultComboBoxModel(model.Funkcje.getProducts()));
        } catch (SQLException e) {};
        ProduktComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProduktComboBoxActionPerformed(evt);
            }
        });

        try{
            String[] ProduktArray = model.Funkcje.getProducts();
            ProduktLabel.setText("Wybierz produkt (1 z " + ProduktArray.length + ")");
        } catch (SQLException e) {};

        PrzygotujButton.setText("Przygotuj dane");
        PrzygotujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrzygotujButtonActionPerformed(evt);
            }
        });

        ;
        Object columnNames[] = {"Produkt ID", "Ilosc wystąpień", "Support","Confidence","Lift","Conviction"};
        DefaultTableModel models = new DefaultTableModel(columnNames, 0);
        jTable1.setModel(models);
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        try{
            int howmany = model.Funkcje.countNumberofTransactions();
            jLabel1.setText("Łączna ilość transakcji: " + howmany);
        } catch (SQLException e) {};

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(ProduktLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(201, 201, 201))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(ProduktComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CalculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PrzygotujButton)
                                .addGap(184, 184, 184)
                                .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProduktLabel)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(ProduktComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrzygotujButton)
                    .addComponent(CloseButton)
                    .addComponent(CalculateButton))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        System.exit(0);        // TODO add your handling code here:
}//GEN-LAST:event_CloseButtonActionPerformed

private void CalculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateButtonActionPerformed
        try {
                String[] totable = model.Funkcje.countHowManyTimes((String) ProduktComboBox.getSelectedItem());
                Object columnNames[] = {"Produkt ID", "Ilosc wystąpień", "Support","Confidence","Lift","Conviction"};
                DefaultTableModel models = new DefaultTableModel(columnNames, 0);
                String[] tab = new String[6];
                int ilosctransakcji = model.Funkcje.countNumberofTransactions();
                DecimalFormat df = new DecimalFormat("#.#########");
                for (int i = 0; i < totable.length/2; i+=2) {
                        int wspolnewystapienia = Integer.parseInt(totable[i+1]);
                        float support = model.Funkcje.countSupport(wspolnewystapienia, ilosctransakcji); // ilość wspólnych wystąpień/ilość wszystkich transakcji
                        int countit = model.Funkcje.countTransactionList((String) ProduktComboBox.getSelectedItem()); // zlicz ilość transakcji dla elementu
                        float supportA = model.Funkcje.countSupport(countit, ilosctransakcji); // oblicz support(A)
                        float confidence = model.Funkcje.countConfidence(support,supportA);    // oblicz Confidence support(A->B)/support(B)
                        int countitB = model.Funkcje.countTransactionList(totable[i]);
                        float supportB = model.Funkcje.countSupport(countitB, ilosctransakcji); // oblicz support(B)
                        float lift = model.Funkcje.countLift(confidence, supportB);
                        float conviction = model.Funkcje.countConviction(confidence,supportB);
                        tab[0] = totable[i];
                        tab[1] = totable[i+1];
                        tab[2] = df.format(support);
                        tab[3] = df.format(confidence);
                        tab[4] = df.format(lift);
                        tab[5] = df.format(conviction);
                        models.addRow(tab);
                                             
                }
                jTable1.setModel(models);
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(models);
                jTable1.setRowSorter(sorter);
                List<RowSorter.SortKey> sortKeys = new ArrayList<>(100);

        } catch (SQLException ex) {
                Logger.getLogger(Widok.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_CalculateButtonActionPerformed


private void ProduktComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProduktComboBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_ProduktComboBoxActionPerformed

private void PrzygotujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrzygotujButtonActionPerformed
        try {
                funkcje.DataPreparation.przygotujplik();
                model.Funkcje.insertToDB();
                model.Funkcje.insertTransactionIdtoDB();
                // TODO add your handling code here:
        } catch (IOException | SQLException ex) {
                Logger.getLogger(Widok.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_PrzygotujButtonActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                        if ("Nimbus".equals(info.getName())) {
                                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                break;
                        }
                }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(Widok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
                                                try {
                                                        new Widok().setVisible(true);
                                                } catch (SQLException ex) {
                                                        Logger.getLogger(Widok.class.getName()).log(Level.SEVERE, null, ex);
                                                }
                                        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalculateButton;
    private javax.swing.JButton CloseButton;
    private javax.swing.JComboBox<String> ProduktComboBox;
    private javax.swing.JLabel ProduktLabel;
    private javax.swing.JButton PrzygotujButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.ButtonGroup radioGroup;
    // End of variables declaration//GEN-END:variables
}
